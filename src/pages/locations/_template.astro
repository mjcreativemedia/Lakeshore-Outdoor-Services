---
import Base from "../../layouts/Base.astro";
import SEO from "../../components/SEO.astro";
import JsonLd from "../../components/JsonLd.astro";
import { business } from "../../data/business";

export interface Props {
  title: string;
  description: string;
  serviceName: string;
  city: string;
  area?: string;
  internalLinks?: Array<{ href: string; label: string; description?: string }>;
}

const { title, description, serviceName, city, area, internalLinks = [] } = Astro.props;
const canonical = new URL(Astro.url.pathname, business.site).toString();
const locationName = `${city}${area ? `, ${area}` : ""}`;
const { address, serviceAreas } = business;
const hasStreet = address.street.trim().length > 0;
const hasPostal = address.postal.trim().length > 0;
const businessAddress = hasStreet
  ? {
      "@type": "PostalAddress",
      streetAddress: address.street,
      addressLocality: address.city,
      addressRegion: address.region,
      ...(hasPostal ? { postalCode: address.postal } : {}),
      addressCountry: address.country,
    }
  : {
      "@type": "PostalAddress",
      addressLocality: address.city,
      addressRegion: address.region,
      addressCountry: address.country,
    };

const provider = {
  "@type": "LocalBusiness",
  "@id": `${business.site}/#business`,
  name: business.name,
  telephone: business.phone,
  email: business.email,
  url: business.site,
  address: businessAddress,
  ...(hasStreet ? {} : { areaServed: serviceAreas }),
};

const localBusinessSchema = {
  "@context": "https://schema.org",
  "@type": "SnowRemovalService",
  name: business.name,
  description,
  telephone: business.phone,
  email: business.email,
  url: canonical,
  address: businessAddress,
  areaServed: locationName,
  serviceType: serviceName,
  provider,
};

const breadcrumbs = {
  "@context": "https://schema.org",
  "@type": "BreadcrumbList",
  itemListElement: [
    {
      "@type": "ListItem",
      position: 1,
      name: "Home",
      item: `${business.site}/`,
    },
    {
      "@type": "ListItem",
      position: 2,
      name: "Locations",
      item: `${business.site}/locations/`,
    },
    {
      "@type": "ListItem",
      position: 3,
      name: locationName,
      item: canonical,
    },
  ],
};
---
<Base title={title}>
  <SEO title={title} description={description} canonical={canonical} type="LocalBusiness" />
  <JsonLd schema={localBusinessSchema} />
  <JsonLd schema={breadcrumbs} />
  <article class="content">
    <header>
      <p class="eyebrow">Serving {locationName}</p>
      <h1>{title}</h1>
      <p class="lead">{description}</p>
    </header>
    <slot />
    {internalLinks.length > 0 && (
      <section class="internal-links">
        <h2>Plan your next step</h2>
        <ul>
          {internalLinks.map((link) => (
            <li>
              <a href={link.href}>{link.label}</a>
              {link.description && <p>{link.description}</p>}
            </li>
          ))}
        </ul>
      </section>
    )}
  </article>
</Base>

<style>
  .content {
    margin: 0 auto;
    max-width: 720px;
    padding: 3rem 1.5rem;
    display: grid;
    gap: 2rem;
  }

  .eyebrow {
    text-transform: uppercase;
    letter-spacing: 0.08em;
    font-size: 0.875rem;
    color: #475569;
    margin: 0;
  }

  .lead {
    font-size: 1.125rem;
    line-height: 1.6;
    color: #1f2937;
  }

  .internal-links ul {
    list-style: none;
    margin: 0;
    padding: 0;
    display: grid;
    gap: 1rem;
  }

  .internal-links li {
    background: #e2e8f0;
    padding: 1rem;
    border-radius: 0.75rem;
  }

  .internal-links a {
    font-weight: 600;
  }

  .internal-links p {
    margin: 0.5rem 0 0;
    color: #1f2937;
  }
</style>
