---
import Base from "../../layouts/Base.astro";
import SEO from "../../components/SEO.astro";
import JsonLd from "../../components/JsonLd.astro";
import { BUSINESS } from "../../data/business";

const title = "Snow removal locations";
const description = "See Lakeshore Outdoor Services coverage across Chicagoâ€™s lakefront neighborhoods and nearby North Shore communities.";
const canonical = new URL(Astro.url.pathname, BUSINESS.site).toString();
const breadcrumbs = {
  "@context": "https://schema.org",
  "@type": "BreadcrumbList",
  itemListElement: [
    {
      "@type": "ListItem",
      position: 1,
      name: "Home",
      item: `${BUSINESS.site}/`,
    },
    {
      "@type": "ListItem",
      position: 2,
      name: "Locations",
      item: canonical,
    },
  ],
};
const areaPageMap = new Map<string, string>([
  ["Hyde Park", "/locations/snow-removal-hyde-park/"],
  ["Lakeview", "/locations/snow-removal-lakeview/"],
  ["Lincoln Park", "/locations/snow-removal-lincoln-park/"],
  ["Evanston", "/locations/snow-removal-evanston/"],
]);

const areaSummaries: Record<string, string> = {
  "Hyde Park": "University-area homes, institutions, and condo buildings near the lakefront.",
  "South Shore": "Lakefront residences, condos, and cultural sites needing careful walkway clearing.",
  "Bronzeville": "Greystones, brownstones, and mixed-use blocks along the Cottage Grove corridor.",
  "Roseland": "Single-family homes and small businesses along Michigan Avenue and 111th Street.",
  "Pullman": "Historic rowhomes and industrial campuses requiring reliable snow staging.",
  "Altgeld Gardens": "Townhome communities and campus-style developments on the Far South Side.",
  "Lakeview": "Dense North Side blocks with alleys, shared drives, and busy retail corridors.",
  "Lincoln Park": "Rowhouses, mid-rises, and storefronts along Clark, Halsted, and Armitage.",
  "Evanston": "North Shore residences, schools, and small businesses near transit and lakefront routes.",
  "Wilmette": "Residential streets, lakefront estates, and village retail centers.",
  "Winnetka": "Estate drives, private lanes, and community institutions across the North Shore.",
};

const areas = BUSINESS.areasServed.map((area) => ({
  name: area,
  href: areaPageMap.get(area) ?? null,
  summary: areaSummaries[area] ?? "",
}));
---
<Base title={title}>
  <SEO title={`${title} | ${BUSINESS.name}`} description={description} canonical={canonical} type="website" />
  <JsonLd schema={breadcrumbs} />
  <section class="listing">
    <header>
      <h1>{title}</h1>
      <p>{description}</p>
      <p class="note">
        Looking for our citywide overview? Visit the <a href="/locations/snow-removal-chicago/">Chicago snow removal page</a>.
      </p>
    </header>
    <ul>
      {areas.map((area) => (
        <li>
          {area.href ? <h2><a href={area.href}>{area.name}</a></h2> : <h2>{area.name}</h2>}
          {area.summary && <p>{area.summary}</p>}
          {area.href && (
            <a class="cta" href={area.href} aria-label={`View snow removal service details for ${area.name}`}>
              View area details
            </a>
          )}
        </li>
      ))}
    </ul>
  </section>
</Base>

<style>
  .listing {
    margin: 0 auto;
    max-width: 960px;
    padding: 3rem 1.5rem;
    display: grid;
    gap: 2rem;
  }

  ul {
    list-style: none;
    margin: 0;
    padding: 0;
    display: grid;
    gap: 1.25rem;
    grid-template-columns: repeat(auto-fit, minmax(260px, 1fr));
  }

  li {
    background: #e2e8f0;
    border-radius: 0.75rem;
    padding: 1.5rem;
    display: grid;
    gap: 0.75rem;
  }

  .cta {
    align-self: flex-start;
    display: inline-flex;
    padding: 0.65rem 1.25rem;
    border-radius: 999px;
    background: #2563eb;
    color: #fff;
    text-decoration: none;
    font-weight: 600;
  }

  .cta:hover,
  .cta:focus {
    background: #1d4ed8;
  }

  .note {
    margin: 0;
    font-weight: 600;
  }
</style>
